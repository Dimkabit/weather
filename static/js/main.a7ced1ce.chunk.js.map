{"version":3,"sources":["redux/Constants.js","components/ApiConstants.js","redux/Actions.js","components/Clock.js","components/Weather.js","redux/Reducer.js","redux/Store.js","containers/App.js","index.js"],"names":["GET_WEATHER","BASE_URL","GetWeatherDetals","location","dispatch","a","type","axios","get","params","q","units","lang","then","response","payload","data","catch","err","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Clock","props","state","time","toOffsetDate","offset","this","intervalID","setInterval","tick","clearInterval","d","Date","getTime","hrs","getHours","min","getMinutes","sec","getSeconds","setState","className","React","Component","format_date","day","getDay","date","getDate","month","getMonth","year","getFullYear","Weather","handleSubmit","e","preventDefault","searchInput","action","handleOnChange","target","value","weatherData","success","weather","sys","name","main","wind","onClick","window","reload","onSubmit","placeholder","onChange","country","temp","feels_like","humidity","pressure","speed","src","icon","alt","connect","bindActionCreators","WeatherInitialState","loading","WeatherStore","createStore","composeWithDevTools","applyMiddleware","thunk","App","store","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a7ced1ce.chunk.js","sourcesContent":["export const GET_WEATHER = {\r\n\tPENDING: \"GET_WEATHER_PENDING\",\r\n\tSUCCESS: \"GET_WEATHER_SUCCESS\",\r\n\tREJECTED: \"GET_WEATHER_REJECTED\"\r\n};","export const API_KEY = \"73ef1f2ddc9b576d8e0f1b9d97bad396\";\r\nexport const BASE_URL = `https://api.openweathermap.org/data/2.5/weather?appid=${API_KEY}`;\r\n","import { GET_WEATHER } from './Constants';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from '../components/ApiConstants';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const GetWeatherDetals = (location = \"Brest\") => async dispatch => {\r\n\tdispatch({ type: GET_WEATHER.PENDING });\r\n\taxios\r\n\t.get(BASE_URL, {\r\n\t\tparams: {\r\n\t\t\tq: location,\r\n\t\t\tunits: \"Metric\",\r\n\t\t\tlang: \"ru\"\r\n\t\t}\r\n\t})\r\n\t.then(response=> \r\n\t\tdispatch({ type: GET_WEATHER.SUCCESS, payload: response.data })\r\n\t\t)\r\n\t\t.catch(err => {\r\n\t\t\t//console.log(err.response, err);\r\n\t\t\ttoast.error(err.response.data.message, {\r\n\t\t\t\tposition: \"bottom-center\",\r\n\t\t\t\tautoClose: 3000,\r\n\t\t\t\thideProgressBar: false,\r\n\t\t\t\tcloseOnClick: true,\r\n\t\t\t\tpauseOnHover: false,\r\n\t\t\t\tdraggable: false\r\n\t\t\t});\r\n\t\t\tdispatch({ type: GET_WEATHER.REJECTED, payload: err.response});\r\n\t\t});\r\n};","import React from \"react\";\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: this.toOffsetDate(this.props.offset)\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    toOffsetDate(offset) {\r\n        var d = new Date(new Date().getTime() + (3600 * 1000));\r\n        var hrs = d.getHours();\r\n        if(hrs < 10) hrs = '0' + hrs;\r\n        var min = d.getMinutes();\r\n        if(min < 10) min = '0' + min;\r\n        var sec = d.getSeconds();\r\n        if(sec < 10) sec = '0' + sec;\r\n        return `${hrs}:${min}:${sec}`;\r\n\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: this.toOffsetDate(this.props.offset)\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <p className=\"App-clock\">\r\n                {this.state.time}\r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { GetWeatherDetals } from '../redux/Actions';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport  Clock  from '../components/Clock';\r\n\r\nconst format_date = (d) => {\r\n\tlet months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\r\n\tlet days = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n \r\n\tlet day = days[d.getDay()];\r\n\tlet date = d.getDate();\r\n\tlet month = months[d.getMonth()];\r\n\tlet year = d.getFullYear();\r\n \r\n\treturn `${day} ${date} ${month} ${year}`\r\n }\r\n\r\nclass Weather extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchInput: ''\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { GetWeatherDetals } = this.props.action;\r\n\t\tGetWeatherDetals();\r\n\t}\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tconst { searchInput } = this.state;\r\n\t\tconst { GetWeatherDetals } = this.props.action;\r\n\t\tif (searchInput) GetWeatherDetals(this.state.searchInput);\r\n\t\tthis.setState({ searchInput: ''});\r\n\t};\r\n\thandleOnChange = e => {\r\n\t\tthis.setState({\r\n\t\t\tsearchInput: e.target.value\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { data, success } = this.props.weatherData;\r\n\t\tconst { weather, sys, name, main, wind } = data;\r\n\t\tconst { searchInput } = this.state;\r\n\t\treturn (\r\n\t<div className=\"wrapper\">\r\n\t\t<div className=\"header\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"header__row\">\r\n\t\t\t\t\t<div className=\"header_refresh\">\r\n\t\t\t\t\t\t\t<button className=\"refresh\" onClick={ () => window.location.reload() }></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit} >\t\r\n\t\t\t\t\t\t<div className=\"header_serach\">\r\n\t\t\t\t\t\t\t<div className=\"search_header\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"city\" placeholder=\"Search city\" value={searchInput} onChange={e => this.handleOnChange(e)} />\r\n\t\t\t\t\t\t\t\t<button className=\"search\">search</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"content-weather_title\">{ success ? name : \"Брест\" }, { success ? sys.country : \"BY\" }</div>\r\n\t\t<div className=\"content\">\r\n\t\t\t<div className=\"content-weather\">\r\n\t\t\t\t<div className=\"content-weather_subtitle\">\r\n\t\t\t\t\t<div className=\"subtitle-date\">{format_date(new Date())}</div>\r\n\t\t\t\t\t<div className=\"subtitle-time\"><Clock /></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"wrapper-content-weather\">\r\n\t\t<div className=\"infoWeath\">\r\n\t\t\t\t<div className=\"info-cont\">\r\n\t\t\t\t\t<div className=\"content-weather_wether \">\r\n\t\t\t\t\t\t<p className=\"temp\">{success ? main.temp : \"15\"}<span className=\"gradus\"></span></p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t<p>Заход солнца: {success ? main.feels_like : \"0\"}</p>\r\n\t\t\t\t\t\t<p>Влажность: {success ? main.humidity : \"0\"}%</p>\r\n\t\t\t\t\t\t<p>Атмосферное давление: {success ? main.pressure : \"0\"} гПа</p>\r\n\t\t\t\t\t\t<p>Сила ветра: {success ? wind.speed : \"0\"} м/с</p>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t\t<div className='icon'>\r\n\t\t\t\t\t{success ? (\r\n                  <img\r\n                    src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`}\r\n                    alt=\"\"\r\n                  />\r\n                ) : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\t\r\n\t\t</div>\r\n\t\t<ToastContainer />\r\n\t</div>\r\n\t\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tweatherData: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\taction: bindActionCreators({ GetWeatherDetals }, dispatch)\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);","import { GET_WEATHER } from \"../redux/Constants\";\r\nconst WeatherInitialState = {\r\n  loading: false,\r\n  error: false,\r\n  success: false,\r\n  data: {}\r\n};\r\n\r\nexport const WeatherReducer = (state = WeatherInitialState, action) => {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case GET_WEATHER.PENDING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case GET_WEATHER.SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        data: action.payload\r\n      };\r\n    case GET_WEATHER.REJECTED:\r\n      return {\r\n        ...state,\r\n        error: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, applyMiddleware } from 'redux';\r\nimport { WeatherReducer } from '../redux/Reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst WeatherStore = createStore(\r\n\tWeatherReducer,\r\n\tcomposeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default WeatherStore;","import React from 'react';\r\nimport '../containers/App.css';\r\nimport Weather from '../components/Weather';\r\nimport { Provider } from 'react-redux';\r\nimport WeatherStore from '../redux/Store';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Provider store={WeatherStore}>\r\n\t\t\t<Weather />\r\n\t\t</Provider>\r\n\t);\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n"],"sourceRoot":""}